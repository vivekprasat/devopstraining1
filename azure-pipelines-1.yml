trigger: none

pool:
  name: Default
  demands:
    - agent.name -equals vivek

stages:
- stage: Terraform
  displayName: "Terraform Plan and Apply"
  jobs:
  - job: TerraformJob
    displayName: "Run Terraform"
    steps:
    - script: sudo apt-get update && sudo apt-get install -y unzip
      displayName: "Install unzip"

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - script: terraform -version
      displayName: "Check Terraform Version"

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'azuredevops'
        backendAzureRmResourceGroupName: 'vivek007'
        backendAzureRmStorageAccountName: 'tfstorage000009'
        backendAzureRmContainerName: 'tfprivatecontainer'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: "azuredevops"



- stage: deploy
  displayName: "Terraform Apply"
  dependsOn: Terraform
  #condition: suceeded()
  jobs:
   - deployment: deployterraformresources
     displayName: "deploying terraform resources"
     environment: dev123
     pool:
      name: Default
     strategy:
      runOnce:
        deploy:
          steps:
            - task: TerraformTask@5
              inputs:
               provider: 'azurerm'
               command: 'init'
               backendServiceArm: 'azuredevops'
               backendAzureRmResourceGroupName: 'vivek007'
               backendAzureRmStorageAccountName: 'tfstorage000009'
               backendAzureRmContainerName: 'tfprivatecontainer'
               backendAzureRmKey: 'terraform.tfstate'
              displayName: "inittask"

            - task: TerraformTask@5
              inputs:
                  provider: 'azurerm'
                  command: 'plan'
                  environmentServiceNameAzureRM: 'azuredevops'

            - task: TerraformTask@5
              inputs:
                provider: 'azurerm'
                command: 'apply'
                environmentServiceNameAzureRM: 'azuredevops'
    
    
     