trigger: none

pool:
  name: Default
  demands:
    - agent.name -equals vivek

stages:
- stage: Terraform
  displayName: "Terraform Plan and Apply"
  jobs:
  - job: TerraformJob
    displayName: "Run Terraform"
    steps:
    - script: sudo apt-get update && sudo apt-get install -y unzip
      displayName: "Install unzip"

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - script: terraform -version
      displayName: "Check Terraform Version"

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'azuredevops'
        backendAzureRmResourceGroupName: 'vivek007'
        backendAzureRmStorageAccountName: 'tfstorage000009'
        backendAzureRmContainerName: 'tfprivatecontainer'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: "azuredevops"



- stage: Apply
  displayName: "Terraform Apply"
  jobs:
    - job: terraforminit
      displayName: "apply job"
      steps:
      - task: TerraformTask@5
        inputs:
         provider: 'azurerm'
         command: 'init'
         backendServiceArm: 'azuredevops'
         backendAzureRmResourceGroupName: 'vivek007'
         backendAzureRmStorageAccountName: 'tfstorage000009'
         backendAzureRmContainerName: 'tfprivatecontainer'
         backendAzureRmKey: 'terraform.tfstate'
         displayName: "inittask"

      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'plan'
          environmentServiceNameAzureRM: 'azuredevops'
          
    
    
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'custom'
          outputTo: 'console'
          customCommand: 'terraform apply --auto-approve'
          environmentServiceNameAzureRM: 'azuredevops'