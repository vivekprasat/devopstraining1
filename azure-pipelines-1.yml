trigger: none

pool:
  name: Default
  demands:
    - agent.name -equals vivek

parameters:
  - name: process
    type: string
    default: apply
    values:
      - apply
      - destroy

stages:
- stage: Terraform
  displayName: "Terraform Plan and Apply"
  jobs:
  - job: TerraformJob
    displayName: "Run Terraform"
    steps:
    - script: sudo apt-get update && sudo apt-get install -y unzip
      displayName: "Install unzip"

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - script: terraform -version
      displayName: "Check Terraform Version"

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'azuredevops'
        backendAzureRmResourceGroupName: 'vivek007'
        backendAzureRmStorageAccountName: 'tfstorage000009'
        backendAzureRmContainerName: 'tfprivatecontainer'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: "azuredevops"

- stage: Deploy
  displayName: "Terraform Apply"
  dependsOn: Terraform
  condition: succeeded()
  jobs:
   - deployment: DeployTerraformResources
     displayName: "Deploying Terraform Resources"
     environment: dev123
     pool:
      name: Default
     strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'azuredevops'
              backendAzureRmResourceGroupName: 'vivek007'
              backendAzureRmStorageAccountName: 'tfstorage000009'
              backendAzureRmContainerName: 'tfprivatecontainer'
              backendAzureRmKey: 'terraform.tfstate'
            displayName: "Init Task"

          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'azuredevops'
            displayName: "Terraform Plan"

          - ${{ if eq(parameters.process, 'apply') }}:
            - task: TerraformTask@5
              inputs:
                provider: 'azurerm'
                command: 'apply'
                environmentServiceNameAzureRM: 'azuredevops'
              displayName: "Terraform Apply"

          - ${{ if eq(parameters.process, 'destroy') }}:
            - task: TerraformTask@5
              inputs:
                provider: 'azurerm'
                command: 'destroy'
                environmentServiceNameAzureRM: 'azuredevops'
              displayName: "Terraform Destroy"